name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        run: |
          docker build -t jdollx/music-feedback-website:latest .
          docker push jdollx/music-feedback-website:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy with Docker
        run: |
          ssh -T -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            docker pull jdollx/music-feedback-website:latest
            docker stop music-feedback-website || true
            docker rm music-feedback-website || true
            docker run -d --name music-feedback-website \
            -e USE="${{ secrets.USE }}" \
            -e USE_PASSWORD="${{ secrets.USE_PASSWORD }}" \
            -e DISCORDWIDGET="${{ secrets.DISCORDWIDGET }}" \
            -e EMAIL="${{ secrets.EMAIL }}" \
            -e EMAIL_PASSWORD="${{ secrets.EMAIL_PASSWORD }}" \
            -e TOKEN="${{ secrets.TOKEN }}" \
            -e JENN_ID="${{ secrets.JENN_ID }}" \
            -e MAKI_ID="${{ secrets.MAKI_ID }}" \
            -e STRIKE_ID="${{ secrets.STRIKE_ID }}" \
            -e SONO_ID="${{ secrets.SONO_ID }}" \
            -e TAV_ID="${{ secrets.TAV_ID }}" \
            -e DAVID_ID="${{ secrets.DAVID_ID }}" \
            -e AMAZE_ID="${{ secrets.AMAZE_ID }}" \
            -e TOAST_ID="${{ secrets.TOAST_ID }}" \
            -e SERVER_ID="${{ secrets.SERVER_ID }}" \
              jdollx/music-feedback-website:latest
          EOF

      - name: Wait for Docker container to be ready
        run: |
          sleep 10

      - name: Print Docker logs
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} docker logs music-feedback-website
